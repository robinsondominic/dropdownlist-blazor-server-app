@page "/MailingList"
@*@using BlazorApp1.Data*@
@*@using CommonModels.Model*@
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@*@inject MailingListService MailingListService*@

@using BlazorServeApp.Data
@using BlazorServeApp.Models
@using BlazorServeApp.Services
@inherits OwningComponentBase<GroupsListService>

<h1>Mailing List</h1>
<h2>Add an Email</h2>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Email">  Email *</label>
            @*<input form="Email" class="form-control" @bind="@ml.Email" />*@
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Groups">  Group *</label>
            @*<input form="Groups" class="form-control" @bind="@ml.Groups" />*@
        <select class="form-control" onchange="">
            <option value="">-- Select Group --</option>
            @if (grobj != null)
                @foreach (var item in grobj)
                {
                    <option value="@item.Groups">@item.Groups</option>

                }
            }
        </select>
        </div>
    </div>

</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            @*<input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />*@
            @*<input type="button" class="btn" @onclick="@Cancel" value="Cancel" />*@
        </div>
    </div>
</div>
@code {

    //[Parameter]
    //public string Id{ get; set; }
    //MailingListC ml = new MailingListC();

    //protected async Task Save()
    //{
    //    await MailingListService.SaveAsync(ml);
    //    NavigationManager.NavigateTo("MailingListList");
    //}
    //        void Cancel()
    //        {
    //            NavigationManager.NavigateTo("MailingListList");
    //        }

    List<GroupsListClass> grobj;
    protected override void OnInitialized()
    {
        //base.OnInitialized();
        grobj = Service.groupsobj();

    }

}

